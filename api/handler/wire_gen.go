// Code generated by Wire. DO NOT EDIT.

//go:generate go run -mod=mod github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package handler

import (
	"github.com/bagusAditiaSetiawan/project-management/pkg/auth"
	"github.com/bagusAditiaSetiawan/project-management/pkg/project"
	"github.com/bagusAditiaSetiawan/project-management/pkg/task"
	"github.com/go-playground/validator/v10"
	"github.com/google/wire"
	"gorm.io/gorm"
)

// Injectors from injector.go:

func InitializeAuthController(db *gorm.DB, validate *validator.Validate) *AuthControllerImpl {
	userRepositoryImpl := auth.NewUserRepositoryImpl()
	passwordServiceImpl := auth.NewPasswordServiceImpl()
	jwtServiceImpl := auth.NewJwtServiceImpl()
	userServiceImpl := auth.NewUserServiceImpl(db, userRepositoryImpl, validate, passwordServiceImpl, jwtServiceImpl)
	authControllerImpl := NewAuthControllerImpl(userServiceImpl)
	return authControllerImpl
}

func InitializeProjectController(db *gorm.DB, validate *validator.Validate) *ProjectControllerImpl {
	projectRepositoryImpl := project.NewProjectRepositoryImpl()
	projectServiceImpl := project.NewProjectServiceImpl(db, projectRepositoryImpl, validate)
	projectControllerImpl := NewProjectControllerImpl(projectServiceImpl)
	return projectControllerImpl
}

func InitializeTaskController(db *gorm.DB, validate *validator.Validate) *TaskControllerImpl {
	taskRepositoryImpl := task.NewTaskRepositoryImpl()
	taskServiceImpl := task.NewTaskServiceImpl(db, validate, taskRepositoryImpl)
	taskControllerImpl := NewTaskControllerImpl(taskServiceImpl)
	return taskControllerImpl
}

// injector.go:

var authSet = wire.NewSet(auth.NewUserRepositoryImpl, wire.Bind(new(auth.UserRepository), new(*auth.UserRepositoryImpl)), auth.NewPasswordServiceImpl, wire.Bind(new(auth.PasswordService), new(*auth.PasswordServiceImpl)), auth.NewJwtServiceImpl, wire.Bind(new(auth.JwtService), new(*auth.JwtServiceImpl)), auth.NewUserServiceImpl, wire.Bind(new(auth.UserService), new(*auth.UserServiceImpl)), NewAuthControllerImpl, wire.Bind(new(AuthController), new(*AuthControllerImpl)))

var projectSet = wire.NewSet(project.NewProjectRepositoryImpl, wire.Bind(new(project.ProjectRepository), new(*project.ProjectRepositoryImpl)), project.NewProjectServiceImpl, wire.Bind(new(project.ProjectService), new(*project.ProjectServiceImpl)), NewProjectControllerImpl, wire.Bind(new(ProjectController), new(*ProjectControllerImpl)))

var taskSet = wire.NewSet(task.NewTaskRepositoryImpl, wire.Bind(new(task.TaskRepository), new(*task.TaskRepositoryImpl)), task.NewTaskServiceImpl, wire.Bind(new(task.TaskService), new(*task.TaskServiceImpl)), NewTaskControllerImpl, wire.Bind(new(TaskController), new(*TaskControllerImpl)))
